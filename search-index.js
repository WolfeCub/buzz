var searchIndex = JSON.parse('{\
"buzz":{"doc":"A rust web framework that avoids dependancies wherever …","t":[0,0,13,13,13,3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,24,3,8,11,11,11,11,11,11,23,11,11,11,11,11,11,23,12,11,11,11,11,11,23,23,23,23,11,10,11,11,14,11,11,11,11,11,11,11,11,11,11],"n":["json","prelude","Array","Bool","Fraction","Json","JsonValue","Null","Number","Object","String","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","eq","fmt","from","from","from_body","get","into","into","ne","parse","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","Buzz","BuzzContext","Deserialize","Inject","Respond","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","delete","deref","dispatch","from","from","from","get","get","headers","into","into","into","new","new","options","patch","post","put","register","respond","router","routes","routes","run_server","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["buzz","","buzz::json","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","buzz::json::JsonValue","","","","","","buzz::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Holds metadata about the incoming <code>HttpRequest</code> that’s …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,0,0,1,1,1,1,2,1,2,1,1,1,2,1,1,2,1,2,2,2,1,1,1,1,1,2,1,2,1,2,1,3,4,5,6,7,8,0,0,0,0,0,9,10,11,9,10,11,0,11,9,9,10,11,11,0,10,9,10,11,9,11,0,0,0,0,9,12,9,9,0,9,9,10,11,9,10,11,9,10,11],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["jsonvalue",4]],[[["",0],["",0]]],[[["",0]]],[[["",0],["jsonvalue",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["str",0]],["result",4,[["box",3,[["error",8]]]]]],[[["",0]],["",0]],[[]],[[]],[[["",0],["jsonvalue",4]],["bool",0]],[[["str",0]],["result",4,[["jsonvalue",4],["jsonparseerror",4]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]]],[[["",0],["httprequest",3]],["httpresponse",3]],[[]],[[]],[[]],[[["",0]],["",0]],null,null,[[]],[[]],[[]],[[["str",0]]],[[["",0]],["inject",3]],null,null,null,null,[[]],[[],["httpresponse",3]],[[]],[[["vec",3]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[4,"JsonValue"],[3,"Json"],[13,"Number"],[13,"Fraction"],[13,"Bool"],[13,"String"],[13,"Array"],[13,"Object"],[3,"Buzz"],[3,"BuzzContext"],[3,"Inject"],[8,"Respond"]]},\
"buzz_codegen":{"doc":"","t":[24,23,23,23,23,23,23,14],"n":["Deserialize","delete","get","options","patch","post","put","routes"],"q":["buzz_codegen","","","","","","",""],"d":["","","","","","","",""],"i":[0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null],"p":[]},\
"buzz_types":{"doc":"This crate contains common types that are used by multiple …","t":[13,3,13,13,13,6,4,3,3,4,3,13,13,13,13,13,13,13,13,3,3,13,4,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,0,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,4,13,13,13,13,13,13,4,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,8,8,10,10,10],"n":["BadRequest","BuzzContext","Const","Delete","Get","Handler","HttpMethod","HttpRequest","HttpResponse","HttpStatusCode","Inject","InternalServerError","NoContent","NotFound","Ok","Options","Patch","Post","Put","Route","RouteMetadata","SegNone","SegmentType","Variable","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","dev","eq","eq","eq","errors","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_str","from_vec","get","handler","headers","headers","headers","into","into","into","into","into","into","into","into","into","method","method","method","ne","new","new","new","path","route","segment","status","status_code","to_owned","to_owned","to_owned","to_owned","to_string","to_string","traits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","0","0","DependancyInjection","Parser","borrow","borrow","borrow_mut","borrow_mut","consume","consume_while","data","fmt","from","from","get","into","into","new","new","offset","peek","register","remaining","rewind","subbytes","subbytes_to_offset","substr","substr_to_offset","take","take_if","take_n","try_from","try_from","try_into","try_into","type_id","type_id","BadRequest","BuzzError","DeserializationError","DuplicateDecimals","EndOfInputWhile","ExpectedColon","ExpectedComma","FractionalParseError","Header","HttpParseError","InvalidObjectKey","JsonParseError","JsonParseError","Method","MismatchedTypes","MissingLeadingSlash","MissingNewlineAfterHeaders","MissingValues","NumberParseError","Path","RouteParseError","UnexpectedToken","UseOfUnregesteredInject","VersionParse","VersionText","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","source","source","source","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","1","1","0","0","0","0","0","0","0","0","0","0","Deserialize","FromBody","Respond","deserialize","from_body","respond"],"q":["buzz_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","buzz_types::SegmentType","","buzz_types::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","buzz_types::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","buzz_types::errors::BuzzError","","","buzz_types::errors::DeserializationError","","","","buzz_types::errors::HttpParseError","","","","","buzz_types::errors::JsonParseError","","","","","buzz_types::traits","","","","",""],"d":["","Holds metadata about the incoming <code>HttpRequest</code> that’s …","A static segment of a URL that will only match it’s …","","","A wrapper around a user defined route handler.","Represents an HTTP request method.","Representation of an HTTP request that’s been parsed.","Holds the data that will be formatted back into an HTTP …","Represents the status code of an HTTP response.","","","","","","","","","","Represents a tree of url routes.","Contains preparsed route segments and the HTTP method that …","A placeholder for empty or terminal segments","Represents the type of a url segment.","A dynamic segment of the URL that can be passed in as a …","","","","","","","","","","","","","","","","","","","","","","Recursively contains routes that share this segment as a …","","","","","","","","","","Contains things are used internally by Buzz across crates …","","","","Contains error types","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The function that should be called when this route is hit.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","If the route is valid to be hit (see <code>Route::handler</code> for …","","","","","","","Denotes the type of this portion of the url.","","","","","","","","","Contains traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,2,3,3,0,0,0,0,0,0,1,1,1,1,3,3,3,3,0,0,2,0,2,4,5,4,6,7,8,3,5,4,1,2,9,6,7,8,3,5,4,1,2,9,9,3,1,2,9,3,1,2,9,8,0,3,1,2,0,3,5,4,1,2,9,6,7,8,3,5,4,1,2,9,3,9,8,9,7,5,4,6,7,8,3,5,4,1,2,9,6,5,9,2,8,4,9,5,6,9,4,4,3,1,2,9,3,1,0,6,7,8,3,5,4,1,2,9,6,7,8,3,5,4,1,2,9,6,7,8,3,5,4,1,2,9,5,10,11,0,0,12,13,12,13,13,13,13,13,12,13,12,12,13,12,13,13,13,12,13,13,13,13,13,13,13,13,13,12,13,12,13,12,13,14,0,0,15,15,15,15,15,16,0,15,0,14,16,17,18,16,17,15,16,0,15,14,16,16,16,18,14,15,17,16,18,14,15,17,16,16,18,18,14,14,15,15,17,17,16,16,18,14,14,15,17,16,18,14,15,17,16,14,15,16,18,14,15,17,16,18,14,15,17,16,18,14,15,17,16,18,14,15,17,19,20,21,22,23,22,23,24,25,26,27,28,29,30,31,32,33,0,0,0,34,35,36],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["httpmethod",4]],[[["",0]],["httpstatuscode",4]],[[["",0]],["segmenttype",4]],[[["",0]],["route",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],null,[[["",0],["httpmethod",4]],["bool",0]],[[["",0],["httpstatuscode",4]],["bool",0]],[[["",0],["segmenttype",4]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4]],[[["httpmethod",4],["handler",6]],["route",3]],[[["",0]],["",0]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["",0],["segmenttype",4]],["bool",0]],[[["",0]]],[[["httpstatuscode",4]]],[[]],null,null,null,[[["httpstatuscode",4]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["usize",0]]],[[["",0]]],null,[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["option",4]],[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["option",4,[["u8",0]]]],[[["",0]]],[[["",0]],["usize",0]],[[["",0],["usize",0]]],[[["",0],["usize",0],["usize",0]]],[[["",0],["usize",0]]],[[["",0],["usize",0],["usize",0]],["str",0]],[[["",0],["usize",0]],["str",0]],[[["",0]],["option",4,[["u8",0]]]],[[["",0]],["option",4,[["u8",0]]]],[[["",0],["usize",0]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["parsefloaterror",3]]],[[]],[[["box",3,[["error",8]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["deserializationerror",4]]]],[[["str",0]],["result",4,[["box",3,[["error",8]]]]]],[[],["httpresponse",3]]],"p":[[4,"HttpStatusCode"],[4,"SegmentType"],[4,"HttpMethod"],[3,"HttpResponse"],[3,"HttpRequest"],[3,"RouteMetadata"],[3,"BuzzContext"],[3,"Inject"],[3,"Route"],[13,"Const"],[13,"Variable"],[3,"DependancyInjection"],[3,"Parser"],[4,"BuzzError"],[4,"JsonParseError"],[4,"HttpParseError"],[4,"DeserializationError"],[4,"RouteParseError"],[13,"UseOfUnregesteredInject"],[13,"JsonParseError"],[13,"BadRequest"],[13,"MismatchedTypes"],[13,"MissingValues"],[13,"Method"],[13,"Path"],[13,"VersionText"],[13,"VersionParse"],[13,"Header"],[13,"UnexpectedToken"],[13,"EndOfInputWhile"],[13,"InvalidObjectKey"],[13,"NumberParseError"],[13,"FractionalParseError"],[8,"Deserialize"],[8,"FromBody"],[8,"Respond"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};