searchState.loadedDescShard("buzz_types", 0, "This crate contains common types that are used by multiple …\nHolds metadata about the incoming <code>HttpRequest</code> that’s …\nA static segment of a URL that will only match it’s …\nA wrapper around a user defined route handler.\nRepresents an HTTP request method.\nRepresentation of an HTTP request that’s been parsed.\nHolds the data that will be formatted back into an HTTP …\nRepresents the status code of an HTTP response.\nWrapper that indicates a shared reference should be …\nWrapper that indicates an exclusive reference should be …\nA function that can modify a request before it’s handled …\nRepresents a tree of url routes.\nContains preparsed route segments and the HTTP method that …\nA placeholder for empty or terminal segments\nRepresents the type of a url segment.\nA dynamic segment of the URL that can be passed in as a …\nRecursively contains routes that share this segment as a …\nContains things are used internally by Buzz across crates …\nContains error types\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe function that should be called when this route is hit.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf the route is valid to be hit (see <code>Route::handler</code> for …\nDenotes the type of this portion of the url.\nContains traits\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")